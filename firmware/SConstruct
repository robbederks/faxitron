import os

MODULE = "faxitron"
PREFIX = "arm-none-eabi-"
DEBUG = True

includes = [
  ".",
  "fx3_lib/inc",
]

common_flags = [
  "-Wall",
  "-mcpu=arm926ej-s",
  "-mthumb-interwork",
]

compiler_flags = [
  "-ffunction-sections",
  "-fdata-sections",
  "-g",
  "-DTX_ENABLE_EVENT_TRACE",
  "-DDEBUG",
  "-DCYU3P_FX3=1",
  "-D__CYU3P_TX__=1",
  "-O0",
]

link_flags = [
  "-d",
  "--entry", "CyU3PFirmwareEntry",
  "-T", "fx3_512k.ld",
  "--gc-sections",
  "--no-wchar-size-warning",
  "-Map", f"{MODULE}.map",
]

project_env = Environment(
  ENV=os.environ,
  CC=PREFIX + 'gcc',
  AS=PREFIX + 'gcc',
  LINK=PREFIX + 'ld',
  AR=PREFIX + 'ar',
  OBJCOPY=PREFIX + 'objcopy',
  OBJDUMP=PREFIX + 'objdump',
  ASCOM="$AS $ASFLAGS -o $TARGET -c $SOURCES",
  CFLAGS=common_flags + compiler_flags,
  ASFLAGS=common_flags,
  LINKFLAGS=link_flags,
  CPPPATH=includes,
)

# Build main elf
main_elf = project_env.Program(
  f"{MODULE}.elf",
  [
    "main.c",
    "cyfxusbdscr.c",
    "cyfxtx.c",
    "cyfx_gcc_startup.S"
  ],
  LINKFLAGS=link_flags,
  LIBS=['cyu3sport', 'cyu3lpp', 'cyfxapi', 'cyu3threadx', 'c', 'gcc'],
  LIBPATH=['.', f"fx3_lib/fx3_{'debug' if DEBUG else 'release'}"]
)
Clean(main_elf, f"{MODULE}.map")

# Build image
SConscript(['elf2img/SConscript'])
main_image = project_env.Command(f"{MODULE}.img", f"{MODULE}.elf", "elf2img/e2i -i $SOURCE -o $TARGET")
